#!/usr/bin/env bash
set -xaeuo pipefail

# create the dotenv file if it doesn't exist
if [ ! -f .env ]; then
    cp .env.default .env

    DOCKER_HOST_UID=$(id -u)
    DOCKER_HOST_GID=$(id -g)

	echo "" >> .env
    echo "DOCKER_HOST_UID=${DOCKER_HOST_UID}" >> .env
    echo "DOCKER_HOST_GID=${DOCKER_HOST_GID}" >> .env

    echo "Created boilerplate .env file at:"
    echo ""
    echo "    $(pwd)/.env"
    echo ""
fi

source .env

nginx_template=nginx-vhost-webpack

if [ "$ENVIRONMENT" != "development" ]; then
    nginx_template=nginx-vhost
fi

# generate nginx vhost
envsubst \
    '${PROJECT} ${ENVIRONMENT}' \
    < ".docker/templates/$nginx_template" \
    > ".docker/environments/${ENVIRONMENT}/etc/nginx/sites-enabled/default"

NGINX_CONTAINER=${PROJECT}_${ENVIRONMENT}_nnginx
NODE_CONTAINER=${PROJECT}_${ENVIRONMENT}_node

./generate-docker-compose
docker-compose up -d

gulp="./node_modules/.bin/gulp"
nodemon="./node_modules/nodemon/bin/nodemon.js"

docker exec -u node $NODE_CONTAINER npm config set registry $NPM_REGISTRY

mkdir -p node_modules

if [ -z "$(ls node_modules)" ]; then
    docker exec -u node $NODE_CONTAINER npm install 
fi

if [ "$ENVIRONMENT" == "development" ]; then
    PRESTASHOP_APP_CONTAINER=havana-shop_local_app

    if [ "$(docker ps -q -f name=$PRESTASHOP_APP_CONTAINER)" != "" ]; then
        SHOP_ID=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' havana-shop_local_app)
        cmd="echo \"$SHOP_ID docker.local\" >> /etc/hosts"
        docker exec -u root "${NODE_CONTAINER}" bash -c "${cmd}"
        echo "Added ${PRESTASHOP_APP_CONTAINER} IP to ${NODE_CONTAINER} hosts file"
    fi

    if [ "$(docker ps -q -f name={$PRESTASHOP_APP_CONTAINER})" != "" ]; then
        SHOP_IP=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' havana-elliot-erwitt_development_nginx)
        cmd="echo \"$SHOP_IP vm.local\" >> /etc/hosts"
        docker exec -u root "${PRESTASHOP_APP_CONTAINER}" bash -c "${cmd}"
        echo "Added $NGINX_CONTAINER IP to ${PRESTASHOP_APP_CONTAINER} hosts file"
    fi

    docker exec -u node $NODE_CONTAINER bash -c "$nodemon babel.server.js" &
    docker exec -u node $NODE_CONTAINER bash -c "$gulp webpack --watch" &
    docker exec -u node $NODE_CONTAINER bash -c "$gulp build --watch"
else
    docker exec -u node $NODE_CONTAINER bash -c "$gulp build --production"
    docker exec -u node $NODE_CONTAINER bash -c "$gulp webpack"
    ./pm2 start babel.server.js
fi

# vim: sts=4 ts=4 sw=4 et
